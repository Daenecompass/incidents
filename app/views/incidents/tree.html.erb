<html>
    <head>
        <%= include_gon(:init => true) %>
    </head>
    <body>
        <div style="display: grid; grid-template-columns: 13% 87%; grid-column-gap: 2%;">
        <div>
            <%= render 'shared/menu' %>
        </div>
        <div>
            <nav class="breadcrumb">
                <ul>
                    <li><a href="<%= incidents_path %>"> All Incidents </a></li>
                    <li><a href="<%= incident_path(@incident) %>"><%= @incident.name %></a></li>
                    <li class="is-active"><a>Tree</a></li>
                </ul>
            </nav>

            <h2 class="title is-4">Tree</h2>
            <p>Red nodes indicate open tickets, yellow nodes in progress tickets, and green nodes closed tickets.</p>

            <div id="tree"></div>
        </div>
    </body>

    <script>
        config = {
            chart: {
                container: "#tree",
            },
            nodeStructure: gon.incident_tree_as_json
        };

        function addingDragAndDropSupport() {
            var nodeDivs = document.getElementsByClassName("node");
            var i;
            for(i=0; i<nodeDivs.length; i++) {
                nodeDivs[i].draggable = true;
                nodeDivs[i].addEventListener('dragstart', dragstart, false);
                nodeDivs[i].addEventListener('dragend', dragend, false);
                nodeDivs[i].addEventListener('drop', drop, false);
                nodeDivs[i].addEventListener('dragover', dragover, false);
            }
        }

        function dragstart(event) {
            // make it half transparent
            event.target.style.opacity = .5;
            event.dataTransfer.setData("sourceId", event.srcElement.id);

            // style (droppable) nodes
            var sourceId = event.srcElement.id; // id of node being dragged
            var allNodesButNodeBeingDragged = $('.node').not("#" + sourceId);
            allNodesButNodeBeingDragged.css('border', '3px dotted black');
        }

        function dragend(event) {
            // reset transparency
            event.target.style.opacity = "";
        }

        function drop(event, target){
            event.preventDefault();

            var sourceId = event.dataTransfer.getData("sourceId");
            var destinationId = event.currentTarget.id;

            // make XHR request
            var data = JSON.stringify({
                "ticket": {
                    "parent_id": destinationId
                }
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
                if (this.readyState === 4) {
                    // this.responseText holds JSON response

                    // refresh the page
                    window.location.reload();
                }
            });

            // we make a PATCH request to a URL like "http://localhost:3000/tickets/3.json"
            xhr.open("PATCH", gon.tickets_url + "/" + sourceId + ".json");
            xhr.setRequestHeader("X-User-Username", gon.user.username);
            xhr.setRequestHeader("X-User-Token", gon.user.authentication_token);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("cache-control", "no-cache");

            xhr.send(data);
        }

        function  dragover(event) {
            event.preventDefault();
        }

        var my_chart = new Treant(config);

        addingDragAndDropSupport();
    </script>

    <style>
        .node {
            padding: 8px;
            -webkit-border-radius: 3px;
            -moz-border-radius: 3px;
            border-radius: 3px;
            background-color: #000;
            border: 1px solid gray;
            font-size: 15px;
            text-align: center;
        }

        .open {
            background-color: #FF5454;
            color: white;
        }
    
        .in_progress {
            background-color: khaki;
            color: black;
        }

        .closed {
            background-color: limegreen; 
            color: white;
        }
    </style>
</html>
