{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview INCIDENTS is an open source web application for incident response, just like TheHive . Investigations are tree-like Investigations are tree-like: a piece of malware may spawn an enterprise-wide sweep, which may find another piece of malware, which may spawn another sweep, and so on. But existing ticketing systems, like TheHive and JIRA, don't let you create subtickets of subtickets. INCIDENTS models incidents as a tree of tickets, like this: Concepts Create an incident for each investigation Each incident has many tickets , or pieces of work. If a ticket needs to be investigated further, mark it as a lead . Add comments , attachments , and observables (aka indicators) to a ticket. Add child tickets to a ticket to break it down into smaller pieces, or to indicate the ticket spawned another piece of work. Benefits Avoid missing things with centralized lead management --whether you're analysing a single system or leading a large engagement Keep people on the same page --team members can glance at the tree to find out what's going on, instead of reading old status updates or reading the entire Slack channel Complete investigations faster --divide large tasks into smaller tickets you assign to people to get things done in parallel. And analysts can identify open tickets to work on, without waiting for the investigation lead Preserve institutional knowledge --document how investigations developed over time to reference in future incidents and for training new analysts Improve your IR process --by documenting an investigation's evolution, be able to look back and find bottlenecks, areas for improvement, opportunities for automation Tame incidents with large scopes --people only need to worry about the few levels in the tree below theirs, instead of being exposed to all the information about the incident Features Restrict who can view an incident View all an incident's attachments in one place View all an incident's observables in one place View all an incident's leads in one place Drag/drop nodes in the tree to quickly reorganize an incident Tag indicators, attachments, tickets, and incidents Assign tickets to users Assign statuses and priorities to tickets Keyboard shortcut for creating an incident","title":"Overview"},{"location":"#overview","text":"INCIDENTS is an open source web application for incident response, just like TheHive .","title":"Overview"},{"location":"#investigations-are-tree-like","text":"Investigations are tree-like: a piece of malware may spawn an enterprise-wide sweep, which may find another piece of malware, which may spawn another sweep, and so on. But existing ticketing systems, like TheHive and JIRA, don't let you create subtickets of subtickets. INCIDENTS models incidents as a tree of tickets, like this:","title":"Investigations are tree-like"},{"location":"#concepts","text":"Create an incident for each investigation Each incident has many tickets , or pieces of work. If a ticket needs to be investigated further, mark it as a lead . Add comments , attachments , and observables (aka indicators) to a ticket. Add child tickets to a ticket to break it down into smaller pieces, or to indicate the ticket spawned another piece of work.","title":"Concepts"},{"location":"#benefits","text":"Avoid missing things with centralized lead management --whether you're analysing a single system or leading a large engagement Keep people on the same page --team members can glance at the tree to find out what's going on, instead of reading old status updates or reading the entire Slack channel Complete investigations faster --divide large tasks into smaller tickets you assign to people to get things done in parallel. And analysts can identify open tickets to work on, without waiting for the investigation lead Preserve institutional knowledge --document how investigations developed over time to reference in future incidents and for training new analysts Improve your IR process --by documenting an investigation's evolution, be able to look back and find bottlenecks, areas for improvement, opportunities for automation Tame incidents with large scopes --people only need to worry about the few levels in the tree below theirs, instead of being exposed to all the information about the incident","title":"Benefits"},{"location":"#features","text":"Restrict who can view an incident View all an incident's attachments in one place View all an incident's observables in one place View all an incident's leads in one place Drag/drop nodes in the tree to quickly reorganize an incident Tag indicators, attachments, tickets, and incidents Assign tickets to users Assign statuses and priorities to tickets Keyboard shortcut for creating an incident","title":"Features"},{"location":"faq/","text":"FAQ Who's behind this project? I'm Veeral Patel . I graduated from UC Berkeley with a Computer Science degree in 2018 and worked at Mandiant as an incident response consultant in SF after graduating. Don't hesitate to email me at veeral.patel@berkeley.edu with questions or feature requests!","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#whos-behind-this-project","text":"I'm Veeral Patel . I graduated from UC Berkeley with a Computer Science degree in 2018 and worked at Mandiant as an incident response consultant in SF after graduating. Don't hesitate to email me at veeral.patel@berkeley.edu with questions or feature requests!","title":"Who's behind this project?"},{"location":"incident_permissions/","text":"Incident Permissions INCIDENTS lets you restrict who can view an incident. The basic model When you first create an incident, only you can view it. To allow other users to view your incident, add them in Members. Admins are members of all incidents. Non-incident members can't view, edit, or delete the incident, its tickets, its observables, its comments, its attachments, or any of its other associated objects. In fact, non-incident members will not even know the incident exists; the incident won't be listed for them on the Incidents page. No RBAC Either you are an incident member, or you are not. All incident members can do the same things, including: Editing an incident's name, description, assigned user, status, priority, tags, and other details Creating, deleting, editing tickets Adding observables, comments, and attachments to tickets Destroying the incident itself Currently, there are no finer grained permissions or roles you can apply to an incident member to limit his abilities. You also can't disallow users from doing actions not tied to a specific incident, such as \"create incident\". (Dealbreaker? Let's chat about your use case! Email me at veeral.patel@berkeley.edu )","title":"Incident Permissions"},{"location":"incident_permissions/#incident-permissions","text":"INCIDENTS lets you restrict who can view an incident.","title":"Incident Permissions"},{"location":"incident_permissions/#the-basic-model","text":"When you first create an incident, only you can view it. To allow other users to view your incident, add them in Members. Admins are members of all incidents. Non-incident members can't view, edit, or delete the incident, its tickets, its observables, its comments, its attachments, or any of its other associated objects. In fact, non-incident members will not even know the incident exists; the incident won't be listed for them on the Incidents page.","title":"The basic model"},{"location":"incident_permissions/#no-rbac","text":"Either you are an incident member, or you are not. All incident members can do the same things, including: Editing an incident's name, description, assigned user, status, priority, tags, and other details Creating, deleting, editing tickets Adding observables, comments, and attachments to tickets Destroying the incident itself Currently, there are no finer grained permissions or roles you can apply to an incident member to limit his abilities. You also can't disallow users from doing actions not tied to a specific incident, such as \"create incident\". (Dealbreaker? Let's chat about your use case! Email me at veeral.patel@berkeley.edu )","title":"No RBAC"},{"location":"user_management/","text":"User Management To add/remove users, visit Admin Users in the top navigation bar. (Only admins can access this page). Adding users To add an user, enter her email address to send her an invitation to create an account. Disabling users Currently, disabled users cannot be re-enabled. This will be fixed. You cannot disable the last enabled admin user. You cannot disable the last enabled user (who's probably an admin!). User statuses An user can have a status of: DISABLED : User is soft deleted and cannot log in. INVITATION_PENDING : The user has been sent, but hasn't accepted, an invitation INVITATION_ACCEPTED : The user has been sent and has accepted an invitation CREATED_MANUALLY : This user wasn't created via invitation. This is likely the initial user, created using the Rails console.","title":"User Management"},{"location":"user_management/#user-management","text":"To add/remove users, visit Admin Users in the top navigation bar. (Only admins can access this page).","title":"User Management"},{"location":"user_management/#adding-users","text":"To add an user, enter her email address to send her an invitation to create an account.","title":"Adding users"},{"location":"user_management/#disabling-users","text":"Currently, disabled users cannot be re-enabled. This will be fixed. You cannot disable the last enabled admin user. You cannot disable the last enabled user (who's probably an admin!).","title":"Disabling users"},{"location":"user_management/#user-statuses","text":"An user can have a status of: DISABLED : User is soft deleted and cannot log in. INVITATION_PENDING : The user has been sent, but hasn't accepted, an invitation INVITATION_ACCEPTED : The user has been sent and has accepted an invitation CREATED_MANUALLY : This user wasn't created via invitation. This is likely the initial user, created using the Rails console.","title":"User statuses"}]}